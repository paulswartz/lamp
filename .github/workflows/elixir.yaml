name: Continuous Integration (Elixir)

on:
  push:
    branches: main
    paths:
      - 'api/**'
  pull_request:
    paths:
      - 'api/**'

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  asdf:
    name: ASDF
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: ASDF cache
        id: asdf-cache
        uses: ./.github/actions/tools
      - run: |
          mix local.rebar --force
          mix local.hex --force
        if: steps.asdf-cache.outputs.cache-hit != 'true'

  deps:
    name: Get Dependencies
    runs-on: ubuntu-22.04
    needs: asdf

    steps:
      - uses: actions/checkout@v3
      - name: ASDF cache
        uses: ./.github/actions/tools
      - name: Restore dependencies cache
        id: deps-cache
        uses: actions/cache@v3
        with:
          path: api/deps
          key: ${{ runner.os }}-mix-v2-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-v2-
      - name: Install dependencies
        run: mix deps.get
        working-directory: api
        if: steps.deps-cache.outputs.cache-hit != 'true'

  dev:
    name: Dev Tasks
    runs-on: ubuntu-22.04
    needs: deps

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/tools
      - name: Restore dependencies cache
        id: deps-cache
        uses: actions/cache@v3
        with:
          path: api/deps
          key: ${{ runner.os }}-mix-v2-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-v2-
      - name: Restore dev build cache
        uses: actions/cache@v3
        with:
          path: api/_build/dev
          key: ${{ runner.os }}-mix-dev-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-dev-
      - name: Compile (warnings as errors)
        run: mix compile --force --warnings-as-errors
        working-directory: api
      - name: Check formatting
        run: mix format --check-formatted
        working-directory: api

  test:
    name: Test Tasks
    runs-on: ubuntu-22.04
    needs: deps

    env:
      BOOTSTRAPPED: 1
      DB_HOST: localhost
      DB_PORT: 5432
      DB_NAME: pm_test
      DB_USER: postgres
      DB_PASSWORD: postgres
    services:
      postgres:
        image: postgres:14.4
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: ${{env.DB_PASSWORD}}
          POSTGRES_USER: ${{env.DB_USER}}
          POSTGRES_DB: ${{env.DB_NAME}}
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: ./.github/actions/poetry_deps
        with:
          poetry-dir: python_src
      - name: Restore dependencies cache
        id: deps-cache
        uses: actions/cache@v3
        with:
          path: api/deps
          key: ${{ runner.os }}-mix-v2-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-v2-
      - name: Restore test build cache
        uses: actions/cache@v3
        with:
          path: api/_build/test
          key: ${{ runner.os }}-mix-test-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-test-
      - name: Run lcov and tests
        run: mix test --cover
        working-directory: api

      - name: Save PR information
        run: |
          mkdir -p api/cover
          echo "${{ github.event.pull_request.number }}" > cover/PR_NUMBER
          echo "${{ github.event.pull_request.head.sha }}" > cover/PR_SHA
        if: github.event.pull_request
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v3
        with:
          name: elixir-lcov
          path: api/cover/
